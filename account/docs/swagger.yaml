basePath: /v1/account
definitions:
  models.GetAccountBalanceResponse:
    properties:
      account_id:
        type: integer
      usd:
        type: number
    type: object
  models.GetAccountResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      login:
        type: string
    type: object
  models.LoginResponse:
    properties:
      id:
        type: integer
    type: object
info:
  contact:
    email: euseew.maxim2015@yandex.ru
    name: API Support
  description: Swagger API for Golang Project Crypto Service.
  license:
    name: EUS
  termsOfService: http://swagger.io/terms/
  title: Account Service API
  version: "1.0"
paths:
  /:
    post:
      consumes:
      - application/json
      description: Creating new unique user's account
      parameters:
      - description: User's unique login
        in: body
        name: login
        required: true
        schema:
          type: string
      - description: User's password
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: Valid unique email
        in: body
        name: email
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Creating new user account
      tags:
      - accounts
  /{id}:
    delete:
      consumes:
      - application/json
      description: Delete user's account pernamently
      parameters:
      - description: User's account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete existing account
      tags:
      - accounts
    get:
      consumes:
      - application/json
      description: Retrieves account basic info, based on given id
      parameters:
      - description: User's account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAccountResponse'
      summary: Retrieve account info
      tags:
      - accounts
  /{id}/activity:
    post:
      consumes:
      - application/json
      description: Buys crypto activity for user for his balance
      parameters:
      - description: 'Price string tag. Example: BTC'
        in: body
        name: symbol
        required: true
        schema:
          type: string
      - description: How much money user want to spend on this cryptocurrency in USD
        in: body
        name: price
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Buy some crypto activity
      tags:
      - accounts
  /{id}/balance:
    get:
      consumes:
      - application/json
      description: Get user's USD balance
      parameters:
      - description: User's account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAccountBalanceResponse'
      summary: Get user's balance
      tags:
      - accounts
  /login:
    get:
      consumes:
      - application/json
      description: Check if user can login. Response contains user's id
      parameters:
      - description: User's login, required if email param is empty
        in: body
        name: login
        schema:
          type: string
      - description: User's password
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: User's email, required if login field is empty
        in: body
        name: email
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
      summary: Login user
      tags:
      - accounts
swagger: "2.0"
