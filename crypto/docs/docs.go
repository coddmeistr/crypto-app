// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "euseew.maxim2015@yandex.ru"
        },
        "license": {
            "name": "EUS"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/history": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves OHLCV info based on timebase, symbol, convert currency symbol",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Timebase to get OHLCV data: days, hours, minutes",
                        "name": "timebase",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Main crypto symbol that you'll get OHLCV for: BTC",
                        "name": "symbol",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Price'd be converted to this currency symbol param",
                        "name": "symbolTo",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "IMPORTANT: number of records you'll get",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/crypto_compare_sdk.HistoricalData"
                        }
                    }
                }
            }
        },
        "/prices": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Gets prices in choosen currencys for one crypto symbol",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Crypto symbol: BTC",
                        "name": "symbol",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "All listed currencys which you want to see price for symbol",
                        "name": "symbolsTo",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/crypto_compare_sdk.Prices"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "crypto_compare_sdk.HistoricalData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/crypto_compare_sdk.OHLCVItem"
                    }
                },
                "timeFrom": {
                    "type": "integer"
                },
                "timeTo": {
                    "type": "integer"
                }
            }
        },
        "crypto_compare_sdk.OHLCVItem": {
            "type": "object",
            "properties": {
                "close": {
                    "type": "number"
                },
                "high": {
                    "type": "number"
                },
                "low": {
                    "type": "number"
                },
                "open": {
                    "type": "number"
                },
                "time": {
                    "type": "integer"
                },
                "volumeFrom": {
                    "type": "number"
                },
                "volumeTo": {
                    "type": "number"
                }
            }
        },
        "crypto_compare_sdk.Prices": {
            "type": "object",
            "properties": {
                "prices": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/v1/crypto",
	Schemes:          []string{},
	Title:            "Crypto Service API",
	Description:      "Swagger API for Golang Project Crypto Service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
